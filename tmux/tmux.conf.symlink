# set Zsh as your default Tmux shell
set-option -g default-shell /bin/zsh

# Tmux should be pretty, we need 256 color for that
set -g default-terminal "screen-256color"

# Set keys to vi (instead of emacs)
set -g status-keys vi
setw -g mode-keys vi

# Longer history limit
set -g history-limit 10000

# Set the numbering of windows to go from 1 instead
# of 0 - silly programmers :|
set-option -g base-index 1
setw -g pane-base-index 1

# Enable mouse mode and pane selection
set -g mouse on

# Use C-a as prefix and free C-b
set -g prefix C-a
unbind C-b

# Send C-a to application by pressing it twice
bind C-a send-prefix

# Reload configuration file
unbind r
bind r source-file ~/.tmux.conf \; display "Configration file .tmux reloaded!"

# Redefine splitting shortcuts
bind v split-window -h \; display "Splitting Vertical"
bind s split-window -v \; display "Splitting Horizontal"

# Open new window with SSH
bind-key S command-prompt -p ssh: "new-window -n %1 'ssh %1'"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Pane Selection
bind -n C-left select-pane -L
bind -n C-down select-pane -D
bind -n C-up select-pane -U
bind -n C-right select-pane -R

# Sync tmux panes (replicates input from one pane to the others)
bind p setw synchronize-panes

# Copy to clipboard
bind -t vi-copy y copy-pipe "xclip"
bind C-c run "tmux save-buffer - | xclip -selection c"\; display-message "Buffer copied to clipboard"

# Titles (window number, program name, active (or not)
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T'

# Status bar
set -g status "on"
set -g status-attr "none"
set -g status-justify "left"
set -g status-bg "colour233"
set -g status-left-length "100"
set -g status-right-length "100"
set -g status-left-attr "none"
set -g status-right-attr "none"
set -g message-fg "colour7"
set -g message-bg "colour239"
set -g message-command-fg "colour7"
set -g message-command-bg "colour239"
set -g pane-active-border-fg "colour7"
set -g pane-border-fg "colour239"
setw -g window-status-separator ""
setw -g window-status-fg "colour7"
setw -g window-status-bg "colour237"
setw -g window-status-activity-fg "colour7"
setw -g window-status-activity-bg "colour237"
setw -g window-status-activity-attr "none"
setw -g window-status-attr "none"
set -g status-left "#[fg=colour233,bg=colour1] #S #[fg=colour1,bg=colour233,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour234,bg=colour233,nobold,nounderscore,noitalics]#[fg=colour8,bg=colour234] %Y-%m-%d  %H:%M #[fg=colour1,bg=colour234,nobold,nounderscore,noitalics]#[fg=colour233,bg=colour1] #h "
setw -g window-status-format "#[fg=colour241,bg=colour233] #I #[fg=colour8,bg=colour233]#W "
setw -g window-status-current-format "#[fg=colour233,bg=colour7,nobold,nounderscore,noitalics]#[fg=colour239,bg=colour7] #I #[fg=colour233,bg=colour7]#W #[fg=colour7,bg=colour233,nobold,nounderscore,noitalics]"